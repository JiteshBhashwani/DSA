{
	// Place your snippets for cpp here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	// "Print to console": {
	// 	"prefix": "cppBoilerPlate",
	// 	"body": [
	// 		"#include<bits/stdc++.h>",
	// 		"using namespace std;\n",
	// 		"int main(){\n",
	// 		"\t$1\n",
	// 		"return 0;",
	// 		"}"
	// 	],
	// 	"description": "boilerPlate"
	// }
	"Print to console": {
		"prefix": "DebugSolution",
		"body": [
			"#include <bits/stdc++.h>",
			"using namespace std;",
			"",
			"#define endl \"\\n\";",
			"inline void fast_io();",
			"inline void io_to_file();",
			"",
			"",
			"void solution()",
			"{",
			"\t$1",
			"}",
			"",
			"int main()",
			"{",
			"\tio_to_file();",
			"\tfast_io();",
			"\tsolution();",
			"\treturn 0;",
			"}",
			"inline void io_to_file()",
			"{",
			"#ifndef ONLINE_COMPILER",
			"\tfreopen(\"input.txt\", \"r\", stdin);",
			"\tfreopen(\"output.txt\", \"w\", stdout);",
			"#endif",
			"}",
			"inline void fast_io()",
			"{",
			"\tios_base::sync_with_stdio(false);",
			"\tcin.tie(0);",
			"\tcout.tie(0);",
			"}",
			""
		],	
		"description": "BoilerPlate_for_debugging_coding_question_solution"
	}
}
